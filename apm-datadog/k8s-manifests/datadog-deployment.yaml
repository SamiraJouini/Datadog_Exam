apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml -o k8s-manifests/
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: datadog
  name: datadog
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: datadog
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml -o k8s-manifests/
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: datadog
    spec:
      containers:
        - env:
            - name: DD_API_KEY
              value: 37ee954802d4cd2c761cb7d0dfd900b5
            - name: DD_APM_ENABLED
              value: "true"
            - name: DD_SITE
              value: us5.datadoghq.com
          image: gcr.io/datadoghq/agent:latest
          name: dd-agent
          resources: {}
          volumeMounts:
            - mountPath: /var/run/docker.sock
              name: datadog-claim0
              readOnly: true
            - mountPath: /host/proc/
              name: datadog-claim1
              readOnly: true
            - mountPath: /host/sys/fs/cgroup
              name: datadog-claim2
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: datadog-claim0
          persistentVolumeClaim:
            claimName: datadog-claim0
            readOnly: true
        - name: datadog-claim1
          persistentVolumeClaim:
            claimName: datadog-claim1
            readOnly: true
        - name: datadog-claim2
          persistentVolumeClaim:
            claimName: datadog-claim2
            readOnly: true
status: {}
